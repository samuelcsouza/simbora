version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    container_name: zookeeper

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    container_name: kafka

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    container_name: kafka-ui

  database:
    build:
      context: ./database
      dockerfile: db.Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    ports:
      - 5432:5432
    container_name: postgres

  api-gateway:
    build:
      context: ./api-gateway
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - KAFKA_BROKER=kafka:9092
    ports:
      - 3000:3000
    container_name: api-gateway
    restart: unless-stopped
    depends_on:
      - database
      - kafka

  consumer:
    build:
      context: ./consumer
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - KAFKA_BROKER=kafka:9092
    container_name: consumer
    restart: unless-stopped
    depends_on:
      - database
      - kafka

  ui:
    build:
      context: ./ui
    environment:
      - API_URL=http://localhost:3000
    ports:
      - 3010:3000
    container_name: ui
    restart: unless-stopped
    depends_on:
      - api-gateway

volumes:
  postgres_data:
